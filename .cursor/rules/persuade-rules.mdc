---
description: 
globs: 
alwaysApply: false
---
---
description: 
globs: 
alwaysApply: true
---

# Your rule content

- You can @ files here
- You can use markdown but dont have to

// Persuade Web App CursorRules
// A curated set of .cursorrules for maintaining a consistent, organized structure and documentation 
// in the Persuade voice call simulator repository.
//
// General guidelines
Always use Markdown for documentation and README files.
Maintain the existing structure of the README.md file when adding or updating content.

// README.md structure
Maintain the following structure in the README.md file:
  1. Title and Awesome badge (e.g., "Awesome Persuade")
  2. Logo (optional, but recommended for branding the Persuade app)
  3. Short description of the Persuade app (e.g., voice call simulator to train sales/service reps)
  4. "Why .cursorrules?" section
  5. Table of Contents
  6. Rules section
     - Frontend Frameworks and Libraries
     - Backend and Full-Stack
     - Mobile Development
     - CSS and Styling
     - State Management
     - Database and API
     - Testing
     - Build Tools and Development
     - Language-Specific
     - Other
  7. How to Use section
  8. Contributing section
  9. License section

// Organization of rules
Organize .cursorrules files into the following main categories within the 'rules' directory:
  - Frontend Frameworks and Libraries
  - Backend and Full-Stack
  - Mobile Development
  - CSS and Styling
  - State Management
  - Database and API
  - Testing
  - Build Tools and Development
  - Language-Specific
  - Other

Place each .cursorrules file directly in the 'rules' folder.
The folder name for each .cursorrules file should describe the category and content of the file.
Refer to the README in each folder for guidance on naming conventions and descriptions.

// Naming and formatting
Use descriptive names for .cursorrules files and their folders, following the pattern: 'technology-focus-cursorrules-prompt-file'
Maintain alphabetical order within each category in the README.md file
Use consistent formatting for list items in the README.md file

// Content guidelines
When creating or editing .cursorrules files, focus on instructions specific to the Persuade web app:
//  - Next.js (React, TypeScript) for the frontend
//  - Node.js/Express.js for the backend
//  - GPT-4o API integration for real-time call simulation
//  - AWS EC2 deployment for persistent WebSocket and server processes
Include comments in .cursorrules files to explain complex rules or provide context
Use clear and concise language in all documentation and .cursorrules files
Provide context on the project’s architecture, recommended libraries, and any best practices for real-time voice call functionality

// Optional README for credit and description
Each .cursorrules file may have an accompanying README.md file in its folder
Use this README to provide credit to the original author (if you borrowed or adapted rules) and a brief description of the .cursorrules file’s purpose

// Maintenance and updates
Update the README.md file when adding new .cursorrules files, placing them in the correct category
Ensure all links in the README.md file are relative and correct
When updating the README.md, ensure the table of contents remains accurate
When adding new categories, update both the 'Contents' and 'Rules' sections of the README.md
Regularly review and update categorization as the Persuade app grows and new technologies are introduced

// Best practices
Maintain consistency in capitalization and punctuation throughout the repository
When referencing Cursor AI, always use correct capitalization and spacing
When adding examples or explanations, focus on practical use cases for the Persuade voice call simulator
If a .cursorrules file fits multiple categories, place it in the most relevant one and cross-reference it in others if necessary
Keep the 'Other' category for .cursorrules files that don’t fit neatly into the main categories

// Additional insights
.cursorrules files are repo-specific “Rules for AI”
.cursorrules files should be placed in the root of the repository or within 'rules' as specified
The content of .cursorrules files will be appended to the global “Rules for AI” settings in Cursor
Focus on providing context for Persuade’s unique real-time voice features and GPT-4o interactions
Rules can cover both code generation and code understanding aspects for Cursor AI users
Consider including guidelines for:
  - Next.js + Tailwind CSS/Chakra UI usage
  - Node.js/Express + Socket.io setup on AWS EC2
  - GPT-4o integration details (e.g., environment variables, call flow logic)
  - WebRTC or other voice streaming mechanisms if applicable
